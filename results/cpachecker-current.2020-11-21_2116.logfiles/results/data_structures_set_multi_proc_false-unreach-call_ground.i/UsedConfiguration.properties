analysis.alwaysStoreCounterexamples = true
analysis.checkCounterexamples = true
analysis.entryFunction = main
analysis.machineModel = Linux32
analysis.name = master-thesis-rse
analysis.programNames = ../../sv-benchmarks/c/array-examples/data_structures_set_multi_proc_false-unreach-call_ground.i
analysis.traversal.order = dfs
analysis.traversal.useCallstack = true
analysis.traversal.useReversePostorder = false
analysis.unexploredPathsAsProgram = true
ARGCPA.cpa = cpa.composite.CompositeCPA
AssumptionAutomaton.cpa.automaton.inputFile = output/AssumptionAutomaton.txt
assumptions.automatonFile = AssumptionAutomaton.txt
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.conditions.global.GlobalConditionsCPA, cpa.loopbound.LoopBoundCPA, cpa.callstack.CallstackCPA, cpa.value.ValueAnalysisCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA
counterexample.checkCounterexamples = false
counterexample.checker = CPACHECKER
counterexample.checker.config = ../cex-checks/predicateAnalysis-as-cex-check.properties
counterexample.continueAfterInfeasibleError = false
counterexample.removeInfeasibleErrors = false
cpa = cpa.arg.ARGCPA
cpa.arg.export.code.addAssumptions = false
cpa.arg.export.code.header = false
cpa.automaton.breakOnTargetState = -1
cpa.composite.aggregateBasicBlocks = false
cpa.conditions.global.time.cpu = 100s
cpa.conditions.global.time.cpu.hardlimit = 120s
cpa.generateRangeAfterTimeout = true
cpa.loopbound.trackStack = false
cpa.value.pathrange = ]null, null[
cpa.value.performRse = true
cpa.value.unknownValueHandling = INTRODUCE_SYMBOLIC
limits.time.cpu = 60s
log.consoleLevel = INFO
log.level = INFO
output.path = results/cpachecker-current.2020-11-21_2116.logfiles/results/data_structures_set_multi_proc_false-unreach-call_ground.i/
pathrange.generateRangeAfterTimeout = true
residualprogram.assumptionGuider = specification/AssumptionGuidingAutomaton.spc
specification = config/specification/sv-comp-reachability.spc
statistics.print = true
