# ------------------------------------------------------------------
# This configuration file uses value analysis of local integer
# variables in a model-checking configuration.
# Found errors are cross-checked by CBMC.
# An assumption is generated for all states which cannot be verified.
# ------------------------------------------------------------------

# include ../residualProgramGenerator.properties
#include ./includes/valueAnalysis.properties
#include ./includes/rangedAnalysis.properties

cpa.conditions.global.time.cpu = 100s
# cpa.conditions.global.time.cpu.hardlimit = 120s

# cpa.loopbound.maxLoopIterations = 15
cpa.loopbound.trackStack = false

analysis.unexploredPathsAsProgram = true
residualprogram.assumptionGuider = specification/AssumptionGuidingAutomaton.spc
cpa.automaton.breakOnTargetState=-1
cpa.composite.aggregateBasicBlocks = false
cpa.arg.export.code.header=false
cpa.arg.export.code.addAssumptions = false
AssumptionAutomaton.cpa.automaton.inputFile = output/AssumptionAutomaton.txt
analysis.traversal.useCallstack = true

specification = specification/default.spc

counterexample.continueAfterInfeasibleError = false
counterexample.checkCounterexamples = false
counterexample.removeInfeasibleErrors = false

pathrange.generateRangeAfterTimeout = true
cpa.generateRangeAfterTimeout = true

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.conditions.global.GlobalConditionsCPA, cpa.loopbound.LoopBoundCPA, cpa.callstack.CallstackCPA, cpa.value.ValueAnalysisCPA, cpa.predicate.PredicateCPA, cpa.assumptions.storage.AssumptionStorageCPA

assumptions.automatonFile = AssumptionAutomaton.txt

log.consoleLevel = INFO

# output optimization
cfa.export = false
cfa.exportPerFunction = false
cpa.arg.export = false